EA_JBoss_EAP_Basic_Tuning

Change minimum and maximum JVM heap size in `bin/standalone.conf` or `bin/standalone.conf.bat` (In Windows)

```
# Specify options to pass to the Java VM.
#
if [ "x$JAVA_OPTS" = "x" ]; then
	JAVA_OPTS="-Xms1024m -Xmx1024m -XX:MaxPermSize=256m -XX:NewRatio=2 -XX:PermSize=64m -Djava.net.preferIPv4Stack=true"
 	JAVA_OPTS="$JAVA_OPTS -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS -Djava.awt.headless=true"
else
 	echo "JAVA_OPTS already set in environment; overriding default settings with values: $JAVA_OPTS"
fi```


For some reason the pooling of stateless EJBs is disabled per default in WildFly. If you have  expensive initialization in your stateless session EJBs it is very useful to add pooling for that kind of beans. This can increase the performance of your application dramatically.

Edit the standalone.xml file in the WildFly /standalone/configuration/ directory and change the section “session-bean” like in the following example:

```
 <subsystem xmlns="urn:jboss:domain:ejb3:2.0">
   <session-bean>
       <stateless>
           <bean-instance-pool-ref pool-name="slsb-strict-max-pool"/>
       </stateless>
       <stateful default-access-timeout="5000" 
                 cache-ref="simple" 
                 passivation-disabled-cache-ref="simple"/>
       <singleton default-access-timeout="5000"/>
   </session-bean>
   <pools>
       <bean-instance-pools>
           <strict-max-pool name="slsb-strict-max-pool" 
                            max-pool-size="32" 
                            instance-acquisition-timeout="5" 
                            instance-acquisition-timeout-unit="MINUTES"/>
           <strict-max-pool name="mdb-strict-max-pool" 
				           max-pool-size="20" 
				           instance-acquisition-timeout="5" 
				           instance-acquisition-timeout-unit="MINUTES"/>
       </bean-instance-pools>
    </pools>
    ...
```


http://ralph.soika.com/wildfly-performance-tuning/
